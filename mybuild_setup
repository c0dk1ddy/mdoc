#!/bin/sh
echo "#!/usr/env/python3 python\nb=len,print,input,__import__\n_a,_b,_p,_r=b[3]('sys').argv,b[3]('setup').mybuild,b[3]('functools').partial,b[3]('subprocess').run\ns=shell=_p(_r,shell=1)\n(i,p)=(installer,python)=(lambda x:s(f'pip install {x}'),lambda x:s(f'python {x}'))\ndef load(x,installer=i):\n\ttry:return _b[3](x)\n\texcept:return installer(x)\nl=load\nw=workcmd=lambda q,installer=i:(lambda _l=_p(l,installer=installer):((_l('setuptools'),_l('wheel'),_b())if(q)else(_l('twine'),p('-m twine upload dist/*'))))()\ndef main(*argv,_a=_a):\n\tL=b[0](argv)\n\tif L-1>0:\n\t\tmatch argv[1]:\n\t\t\tcase 'build':w(1)\n\t\t\tcase 'deploy':w(0)\n\t\t\tcase _:b[1]('cmd must be build or deploy')\n\telif L:main(None,b[2]('WARN : no param\\\ninput param : '))\n\telse:main(*_a)\nif __name__=='__main__':main()" > mybuild.py&&echo "#!/bin/sh\npython mybuild.py \$@" > mybuild&&chmod u+x mybuild